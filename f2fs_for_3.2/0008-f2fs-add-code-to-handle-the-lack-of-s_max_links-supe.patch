From 07ded2b4121f887d9b7b2984f12a721507e0a6b8 Mon Sep 17 00:00:00 2001
From: Alejandro Martinez Ruiz <alex@nowcomputing.com>
Date: Fri, 25 Jan 2013 17:36:55 +0100
Subject: [PATCH 08/13] f2fs: add code to handle the lack of s_max_links
 superblock field in 3.2

Signed-off-by: Alejandro Martinez Ruiz <alex@nowcomputing.com>
---
 fs/f2fs/namei.c | 22 +++++++++++++++++++---
 fs/f2fs/super.c |  1 -
 2 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/fs/f2fs/namei.c b/fs/f2fs/namei.c
index 6b8786b..c059493 100644
--- a/fs/f2fs/namei.c
+++ b/fs/f2fs/namei.c
@@ -159,10 +159,16 @@ static int f2fs_link(struct dentry *old_dentry, struct inode *dir,
 		struct dentry *dentry)
 {
 	struct inode *inode = old_dentry->d_inode;
-	struct super_block *sb = dir->i_sb;
-	struct f2fs_sb_info *sbi = F2FS_SB(sb);
+	struct super_block *sb;
+	struct f2fs_sb_info *sbi;
 	int err;
 
+	if (inode->i_nlink >= F2FS_LINK_MAX)
+		return -EMLINK;
+
+	sb = dir->i_sb;
+	sbi = F2FS_SB(sb);
+
 	f2fs_balance_fs(sbi);
 
 	inode->i_ctime = CURRENT_TIME;
@@ -282,10 +288,14 @@ out:
 
 static int f2fs_mkdir(struct inode *dir, struct dentry *dentry, int mode)
 {
-	struct f2fs_sb_info *sbi = F2FS_SB(dir->i_sb);
+	struct f2fs_sb_info *sbi;
 	struct inode *inode;
 	int err;
 
+	if (dir->i_nlink >= F2FS_LINK_MAX)
+		return -EMLINK;
+
+	sbi = F2FS_SB(dir->i_sb);
 	f2fs_balance_fs(sbi);
 
 	inode = f2fs_new_inode(dir, S_IFDIR | mode);
@@ -414,6 +424,12 @@ static int f2fs_rename(struct inode *old_dir, struct dentry *old_dentry,
 			add_orphan_inode(sbi, new_inode->i_ino);
 		f2fs_write_inode(new_inode, NULL);
 	} else {
+		if (old_dir_entry) {
+			err = -EMLINK;
+			if (new_dir->i_nlink >= F2FS_LINK_MAX)
+				goto out_dir;
+		}
+
 		err = f2fs_add_link(new_dentry, old_inode);
 		if (err)
 			goto out_dir;
diff --git a/fs/f2fs/super.c b/fs/f2fs/super.c
index 8c11764..564ceae 100644
--- a/fs/f2fs/super.c
+++ b/fs/f2fs/super.c
@@ -529,7 +529,6 @@ static int f2fs_fill_super(struct super_block *sb, void *data, int silent)
 		goto free_sb_buf;
 
 	sb->s_maxbytes = max_file_size(le32_to_cpu(raw_super->log_blocksize));
-	sb->s_max_links = F2FS_LINK_MAX;
 	get_random_bytes(&sbi->s_next_generation, sizeof(u32));
 
 	sb->s_op = &f2fs_sops;
-- 
1.8.1.2.422.g08c0e7f

